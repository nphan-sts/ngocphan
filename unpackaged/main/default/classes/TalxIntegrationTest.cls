/* ****************Modification History******************************************************************
* Last Modified by    Date        JIRA number
*     Pallavi      2019/12/03      LOS-168(Spike: 3rd Party - Increase of WorkNumber cost in August)
* 	   Anusha      2020/12/03      	CRM-980 Capture and Store All TALX Responses for Each TALX API Request
******************Modification History*****************************************************************/
@isTest
private class TalxIntegrationTest {
    
    static testMethod void testParseTalxResponse() {
        String responseXml = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><DTSERVER>20180410154504</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1><TSVERMSGSRSV1><TSVTWNSELECTTRNRS><TRNUID>a6hW00000006UULIA2</TRNUID><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><MASTERSRVRTID>100074048425</MASTERSRVRTID><TRNPURPOSE><CODE>PPCREDIT</CODE><MESSAGE>Consumer\'s application for credit</MESSAGE></TRNPURPOSE><SPECIALHANDLING><DEMOHANDLING>DEMO</DEMOHANDLING></SPECIALHANDLING><TSVTWNSELECTRS><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10481</EMPLOYERCODE><NAME1>AON</NAME1><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180316000000</DTINFO><DTMOSTRECENTHIRE>20160527000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>7</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20161219000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>19.13</TSVRATEOFPAY><TSVAVGHRSWORKED>40</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>7</CODE><MESSAGE>Weekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>9632.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048437</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10521</EMPLOYERCODE><NAME1>Goodyear Tire &amp; Rubber Company Incorporated</NAME1><DISCLAIMER>employer: If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>20150701000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>6</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151229000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>31.43</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>15536.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048429</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90001</EMPLOYERCODE><NAME1>Enterprise USA</NAME1><DISCLAIMER>employer: This is a test company note.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>This is a test company note.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/90001.gif</LOGOFILENAME><VOICEFILENAME>90001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180309000000</DTINFO><DTMOSTRECENTHIRE>20170104000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>14</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>26.60</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>6</CODE><MESSAGE>Biweekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>12354</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>52786</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048439</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>66311.91</TSVPROJINCOME></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90005</EMPLOYERCODE><NAME1>Enterprise USA Financial</NAME1><DISCLAIMER>employer: &lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180301000000</DTINFO><DTMOSTRECENTHIRE>20150519000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>5</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151024000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18.27</TSVRATEOFPAY><TSVAVGHRSWORKED>160</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>4</CODE><MESSAGE>Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>9219.60</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048433</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>91001</EMPLOYERCODE><NAME1>Enterprise One</NAME1><DISCLAIMER>employer: hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/91001.gif</LOGOFILENAME><VOICEFILENAME>91001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>19990315000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>228</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>8570</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>36153</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>34316.10</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048427</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>42270.95</TSVPROJINCOME></TSVRESPONSE_V100></TSVTWNSELECTRS></TSVTWNSELECTTRNRS></TSVERMSGSRSV1></OFX>';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
        
        TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
        System.assertEquals(5, talxVerification.verifications.size());
        
        List<String> parsedEmployers = new List<String>();
        for (TalxIntegration.Verification verification : talxVerification.verifications) {
            parsedEmployers.add(verification.employer.name);
        }
        System.assertEquals(employers, parsedEmployers);
    }
    
    static testMethod void testParseTalxResponse2() {
        String responseXml = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><DTSERVER>20180410154504</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1><TSVERMSGSRSV1><TSVTWNSELECTTRNRS><TRNUID>a6hW00000006UULIA2</TRNUID><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><MASTERSRVRTID>100074048425</MASTERSRVRTID><TRNPURPOSE><CODE>PPCREDIT</CODE><MESSAGE>Consumer\'s application for credit</MESSAGE></TRNPURPOSE><SPECIALHANDLING><DEMOHANDLING>DEMO</DEMOHANDLING></SPECIALHANDLING><TSVTWNSELECTRS><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10481</EMPLOYERCODE><NAME1>AON</NAME1><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180316000000</DTINFO><DTMOSTRECENTHIRE>20160527000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>7</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20161219000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>19.13</TSVRATEOFPAY><TSVAVGHRSWORKED>40</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>7</CODE><MESSAGE>Weekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>9632.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048437</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10521</EMPLOYERCODE><NAME1>Goodyear Tire &amp; Rubber Company Incorporated</NAME1><DISCLAIMER>employer: If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>20150701000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>6</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151229000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>31.43</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>15536.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048429</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90001</EMPLOYERCODE><NAME1>Enterprise USA</NAME1><DISCLAIMER>employer: This is a test company note.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>This is a test company note.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/90001.gif</LOGOFILENAME><VOICEFILENAME>90001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180309000000</DTINFO><DTMOSTRECENTHIRE>20170104000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>14</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>26.60</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>6</CODE><MESSAGE>Biweekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>12354</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>52786</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048439</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>66311.91</TSVPROJINCOME></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90005</EMPLOYERCODE><NAME1>Enterprise USA Financial</NAME1><DISCLAIMER>employer: &lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180301000000</DTINFO><DTMOSTRECENTHIRE>20150519000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>5</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151024000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18.27</TSVRATEOFPAY><TSVAVGHRSWORKED>160</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>4</CODE><MESSAGE>Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>9219.60</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048433</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>91001</EMPLOYERCODE><NAME1>Enterprise One</NAME1><DISCLAIMER>employer: hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/91001.gif</LOGOFILENAME><VOICEFILENAME>91001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>19990315000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>228</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>8570</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>36153</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>34316.10</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048427</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>42270.95</TSVPROJINCOME></TSVRESPONSE_V100></TSVTWNSELECTRS></TSVTWNSELECTTRNRS></TSVERMSGSRSV1></OFX>';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
        
        TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
        System.assertEquals(5, talxVerification.verifications.size());
        
        List<String> parsedEmployers = new List<String>();
        for (TalxIntegration.Verification verification : talxVerification.verifications) {
            parsedEmployers.add(verification.employer.name);
        }
        System.assertEquals(employers, parsedEmployers);
    }
    
    //CRM-980 - start
    static testMethod void testParseTalxResponseWithSeverityError() {
        String responseXml = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>0</CODE><SEVERITY>ERROR</SEVERITY></STATUS><DTSERVER>20180410154504</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1><TSVERMSGSRSV1><TSVTWNSELECTTRNRS><TRNUID>a6hW00000006UULIA2</TRNUID><STATUS><CODE>0</CODE><SEVERITY>ERROR</SEVERITY></STATUS><MASTERSRVRTID>100074048425</MASTERSRVRTID><TRNPURPOSE><CODE>PPCREDIT</CODE><MESSAGE>Consumer\'s application for credit</MESSAGE></TRNPURPOSE><SPECIALHANDLING><DEMOHANDLING>DEMO</DEMOHANDLING></SPECIALHANDLING><TSVTWNSELECTRS><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10481</EMPLOYERCODE><NAME1>AON</NAME1><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180316000000</DTINFO><DTMOSTRECENTHIRE>20160527000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>7</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20161219000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>19.13</TSVRATEOFPAY><TSVAVGHRSWORKED>40</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>7</CODE><MESSAGE>Weekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>9632.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048437</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10521</EMPLOYERCODE><NAME1>Goodyear Tire &amp; Rubber Company Incorporated</NAME1><DISCLAIMER>employer: If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>If Rate of Pay is blank, the information is not available. Please refer to the associate`s pay stub for current pay rate.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>20150701000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>6</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151229000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>31.43</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>15536.40</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048429</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90001</EMPLOYERCODE><NAME1>Enterprise USA</NAME1><DISCLAIMER>employer: This is a test company note.</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>This is a test company note.</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/90001.gif</LOGOFILENAME><VOICEFILENAME>90001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180309000000</DTINFO><DTMOSTRECENTHIRE>20170104000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>14</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>26.60</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>6</CODE><MESSAGE>Biweekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>12354</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>52786</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048439</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>66311.91</TSVPROJINCOME></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>90005</EMPLOYERCODE><NAME1>Enterprise USA Financial</NAME1><DISCLAIMER>employer: &lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;span id="ctl00_dgDisclaimers_lblDisclaimer_0"&gt;&lt;em&gt;This is a global message and is provided on every verification for your information and convenience. Garnishment requests should be sent to&lt;/em&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;span style="text-decoration: underline;"&gt;Test &amp;amp; Go, L.C.&lt;/span&gt;&lt;br /&gt;ATTN: Payroll&lt;br /&gt;9999 Fake&amp;nbsp;Pkwy.&lt;br /&gt;West Des Moines, IA&amp;nbsp;55555&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;For DOT verifications&lt;/strong&gt;, please contact our Safety Department using one of the following methods:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; - Email:&amp;nbsp;&lt;strong&gt;&lt;span style="color: #1f497d; font-family: &amp;prime;Calibri&amp;prime;,sans-serif; font-size: 11pt; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: &amp;prime;Times New Roman&amp;prime;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;a href="mailto:Solar_Safety@solartransport.com"&gt;&lt;span style="color: #0000ff;"&gt;eCommerceIntegration@talx.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&amp;nbsp; - Fax: 555-555-5555&lt;br /&gt;&amp;nbsp; - Phone: 555-555-5555</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>8</CODE><MESSAGE>Inactive</MESSAGE></EMPLOYEESTATUS><DTINFO>20180301000000</DTINFO><DTMOSTRECENTHIRE>20150519000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>5</TOTALLENGTHOFSVC><DTENDEMPLOYMENT>20151024000000</DTENDEMPLOYMENT></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18.27</TSVRATEOFPAY><TSVAVGHRSWORKED>160</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>4</CODE><MESSAGE>Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2015</TSVYEAR><TSVTOTAL>9219.60</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048433</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME /></TSVRESPONSE_V100><TSVRESPONSE_V100><DTTRANSACTION>20180410154504</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>91001</EMPLOYERCODE><NAME1>Enterprise One</NAME1><DISCLAIMER>employer: hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMER><ITEMIZEDDISCLAIMERS><DISCLAIMERTYPE>ER</DISCLAIMERTYPE><DISCLAIMERTEXT>hello!&lt;br /&gt;This is a test!&lt;br /&gt;Are you showing any breaks?</DISCLAIMERTEXT></ITEMIZEDDISCLAIMERS><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME>http://stl-biz-u2-twnverifierlegacy.sldc1.com:61023/verifier//images/company_logos/91001.gif</LOGOFILENAME><VOICEFILENAME>91001</VOICEFILENAME></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005091</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>DEMO EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180315000000</DTINFO><DTMOSTRECENTHIRE>19990315000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>228</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>18</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>5</CODE><MESSAGE>Semi Monthly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>8570</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>36153</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>34316.10</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100074048427</SRVRTID><DEMOTRN><DEMOTYPE>EMPLOYER</DEMOTYPE></DEMOTRN><TSVPROJINCOME>42270.95</TSVPROJINCOME></TSVRESPONSE_V100></TSVTWNSELECTRS></TSVTWNSELECTTRNRS></TSVERMSGSRSV1></OFX>';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
        
        TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
        
        List<String> parsedEmployers = new List<String>();
        for (TalxIntegration.Verification verification : talxVerification.verifications) {
            parsedEmployers.add(verification.employer.name);
        }
    }
    
    static testMethod void testParseTalxResponse3WithNoCustomSettingsSet() {
        try{
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc; 
            
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            String responseXml = 'abcd';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(app.id,acc.id, talxResponse,null);
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    static testMethod void testParseTalxResponseNot200() {
        TalxInt__c taxInt = new TalxInt__c();
        
        
        taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
        taxInt.APPVER__c= 1;
        taxInt.DTCLIENT__c='20170612131212';
        taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
        taxInt.LANGUAGE__c='ENG';
        taxInt.USERID__c='PayoffIntUsrTest@50005';
        taxInt.USERPASS__c='payoffTalx123!';
        taxInt.SetupOwnerId = UserInfo.getUserId();
        taxInt.TalxCertificateName__c = 'talx';  //LOS-168
        insert taxInt;    
        //Creating Account
        Account acc = new Account(
            Name = 'Test',
            loan__Investor__c=False,
            cnotify__Email__c = 'abc@test.com',
            loan__SOCIAL_SECURITY_NUMBER__c = '123'
        );
        insert acc;
        System.assertEquals('Test',acc.Name,'Wrong Account');
        
        genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
        insert cso;
        
        //Creating Application
        genesis__Applications__c app= new genesis__Applications__c(
            genesis__Due_Day__c = 20,
            genesis__Expected_First_Payment_Date__c = system.Today(),
            genesis__Expected_Start_Date__c = system.Today(),
            genesis__Funding_in_Tranches__c = true,
            Borrower_s_Email__c = null,
            genesis__Account__c = acc.Id,
            Application_Start_DateV2__c = system.Today(),
            DocuSignFlag__c=true,
            genesis__Status__c = 'agent_verified',
            genesis__Draw_Period_End_Date__c = system.Today()
        );
        insert app;
        List<Id> appIdlist = new List<Id>();
        appIdlist.add(app.id);
        Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock2());
        Test.startTest();
        TalxIntegration.CallTalxResponse(app.id,acc.id);
        TalxIntegration.CallTalx(app.id,acc.id);
        TalxIntegration.CallTalx(appIdlist);
        Test.stopTest();
    }
    
    static testMethod void testParseTalxResponseWithNoEmployers() {
        try{
            Account acc = new Account(
                Name = 'Test',
                loan__Investor__c=False,
                cnotify__Email__c = 'abc@test.com',
                loan__SOCIAL_SECURITY_NUMBER__c = '123'
            );
            insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            String responseXml = 'abcd';
            List<String> employers = new List<String>();
            Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(app.id,acc.id, talxResponse,'abcd');
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    static testMethod void testParseTalxResponseInvalidResponseWithCallTalxResponse() {
        try{
            Account acc = new Account(
                Name = 'Test',
                loan__Investor__c=False,
                cnotify__Email__c = 'abc@test.com',
                loan__SOCIAL_SECURITY_NUMBER__c = '123'
            );
            insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            String responseXml = 'abcd';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(app.id,acc.id, talxResponse,null);
            TalxIntegration.CallTalxResponse(app.id,acc.id);
            TalxIntegration.CallTalx(appIdlist);
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    Testmethod static void TestmethodCallTalx(){
        //Creating custom setting
        TalxInt__c taxInt = new TalxInt__c();
        
        taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
        taxInt.APPVER__c= 1;
        taxInt.DTCLIENT__c='20170612131212';
        taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
        taxInt.LANGUAGE__c='ENG';
        taxInt.USERID__c='PayoffIntUsrTest@50005';
        taxInt.USERPASS__c='payoffTalx123!';
        taxInt.SetupOwnerId = UserInfo.getUserId();
        taxInt.TalxCertificateName__c = 'talx';  //LOS-168
        insert taxInt;
        
        //Creating Account
        Account acc = MW_GlobalTestUtility.GetAccount('Member');
        Insert acc;
        System.assertEquals('Test',acc.Name,'Wrong Account');
        
        genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
        insert cso;
        
        //Creating Application
        genesis__Applications__c app= new genesis__Applications__c(
            genesis__Due_Day__c = 20,
            genesis__Expected_First_Payment_Date__c = system.Today(),
            genesis__Expected_Start_Date__c = system.Today(),
            genesis__Funding_in_Tranches__c = true,
            Borrower_s_Email__c = null,
            genesis__Account__c = acc.Id,
            Application_Start_DateV2__c = system.Today(),
            DocuSignFlag__c=true,
            genesis__Status__c = 'agent_verified',
            genesis__Draw_Period_End_Date__c = system.Today()
        );
        insert app;
        List<Id> appIdlist = new List<Id>();
        appIdlist.add(app.id);
        
        System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
        Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
        Test.startTest();
        TalxIntegration.CallTalxResponse(app.id,acc.id);
        TalxIntegration.CallTalx(app.id,acc.id);
        TalxIntegration.CallTalx(appIdlist);
        Test.stopTest();
    }
    
    Testmethod static void TestmethodCallTalxWithNull(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx'; 
            insert taxInt;
            
            //Creating Account
            Account acc = MW_GlobalTestUtility.GetAccount('Member');            
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            TalxIntegration.CallTalxResponse(null,null);
            TalxIntegration.CallTalx(null,null);
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    Testmethod static void TestmethodinsertTalxDataWithNullParamaters(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx';  //LOS-168
            insert taxInt;
            
            //Creating Account
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(null,null, null,null);
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    Testmethod static void TestCallTalxIntegration(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            //taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            //taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            // taxInt.TalxCertificateName__c = 'talx';  //LOS-168
            insert taxInt;
            
            //Creating Account
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            
            Insert acc;
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            String responseXml = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>200</CODE><SEVERITY>INFO</SEVERITY></STATUS><DTSERVER>20180410154504</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1></TSVRESPONSE_V100></TSVTWNSELECTRS></TSVTWNSELECTTRNRS></TSVERMSGSRSV1></OFX>';
            List<String> employers = new List<String>{'AON'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(app.id,acc.id, talxResponse,'talxResponse');
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    Testmethod static void TestParseEmployer(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx';  //LOS-168
            insert taxInt;
            
            //Creating Account
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(null,null, null,null);
            TalxIntegration.parseEmployer(null);
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    static testMethod void testParseTalxResponseInvalidResponseWithTalxVerfication() {
        try{
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            String responseXml = 'abcd';
            List<String> employers = new List<String>{'AON', 'Goodyear Tire & Rubber Company Incorporated', 'Enterprise USA', 'Enterprise USA Financial', 'Enterprise One'};
                Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(app.id,acc.id, talxResponse,null);
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    static testMethod void testParseTalxResponseInvalidResponseWithCallTalx() {
        try{
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            String responseXml = 'abcd';
            List<String> employers = new List<String>();
            Map<String, Object> talxResponse = TalxIntegration.parseTalxResponse(responseXml);
            
            TalxIntegration.TalxVerification talxVerification = (TalxIntegration.TalxVerification) talxResponse.get('talx_verification');
            
            List<String> parsedEmployers = new List<String>();
            for (TalxIntegration.Verification verification : talxVerification.verifications) {
                parsedEmployers.add(verification.employer.name);
            }
            TalxIntegration.insertTalxData(app.id,null, talxResponse,'response');
            TalxIntegration.CallTalxResponse(app.id,acc.id);
            TalxIntegration.CallTalx(appIdlist);
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    static testMethod void testParseTalxResponseInvalidResponseWithTalxVerficationEmpty() {
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx';  //LOS-168
            insert taxInt;
            
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock3());
            Test.startTest();
            TalxIntegration.CallTalxIntegration(app.id,acc.id, 'TestClass');
            Test.stopTest();
        }Catch(Exception e){
            System.debug('Exception in test class');
        }
    }
    
    Testmethod static void testParseDateNotNull(){
        try{
            Test.startTest();
            TalxIntegration.parseDate('20000219');
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    Testmethod static void testParseDateNull(){
        try{
            Test.startTest();
            TalxIntegration.parseDate(null);
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    public class TestTalxResponseMock2 implements HttpCalloutMock{
        
        public HTTPResponse respond(HTTPRequest req) { 
            
            String json = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><DTSERVER>20180503020721</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1><TSVERMSGSRSV1><TSVTWNSELECTTRNRS><TRNUID>a6hW00000006XEXIA2</TRNUID><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><MASTERSRVRTID>100075587239</MASTERSRVRTID><TRNPURPOSE><CODE>PPCREDIT</CODE><MESSAGE>Consumers application for credit</MESSAGE></TRNPURPOSE><SPECIALHANDLING><DEMOHANDLING>DEMO</DEMOHANDLING></SPECIALHANDLING><TSVTWNSELECTRS><TSVRESPONSE_V100><DTTRANSACTION>20180503020722</DTTRANSACTION><TSVEMPLOYER_V100><EMPLOYERCODE>10481</EMPLOYERCODE><NAME1>AON</NAME1><EMPLOYERDISPLAY><EMPLOYERDISPLAYINFO><LANGUAGE>ENG</LANGUAGE><LOGOFILENAME /><VOICEFILENAME /></EMPLOYERDISPLAYINFO></EMPLOYERDISPLAY></TSVEMPLOYER_V100><TSVEMPLOYEE_V100><SSN>799005154</SSN><FIRSTNAME>Test</FIRSTNAME><MIDDLENAME>X</MIDDLENAME><LASTNAME>Employee</LASTNAME><POSITION-TITLE>EMPLOYEE</POSITION-TITLE><EMPLOYEESTATUS><CODE>1</CODE><MESSAGE>Active</MESSAGE></EMPLOYEESTATUS><DTINFO>20180420000000</DTINFO><DTMOSTRECENTHIRE>20090903000000</DTMOSTRECENTHIRE><TOTALLENGTHOFSVC>104</TOTALLENGTHOFSVC><DTENDEMPLOYMENT /></TSVEMPLOYEE_V100><TSVBASECOMP><TSVPAYFREQUENCY><CODE>9</CODE><MESSAGE>Hourly</MESSAGE></TSVPAYFREQUENCY><TSVRATEOFPAY>22</TSVRATEOFPAY><TSVAVGHRSWORKED>80</TSVAVGHRSWORKED><TSVPAYPERIODFREQUENCY><CODE>6</CODE><MESSAGE>Biweekly</MESSAGE></TSVPAYPERIODFREQUENCY></TSVBASECOMP><TSVANNUALCOMP><TSVYEAR>2018</TSVYEAR><TSVTOTAL>14530</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2017</TSVYEAR><TSVTOTAL>43877</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR>2016</TSVYEAR><TSVTOTAL>41662.90</TSVTOTAL></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVANNUALCOMP><TSVYEAR /><TSVTOTAL /></TSVANNUALCOMP><TSVBENEFITS_V100 /><COMPLETENESS>INCOME</COMPLETENESS><SRVRTID>100075587241</SRVRTID><DEMOTRN><DEMOTYPE /></DEMOTRN><TSVPROJINCOME>48213.18</TSVPROJINCOME></TSVRESPONSE_V100></TSVTWNSELECTRS></TSVTWNSELECTTRNRS></TSVERMSGSRSV1></OFX>';
            
            // Create a fake response for status code other than 200
            HttpResponse res = new HttpResponse();
            res.setHeader('Content-Type', 'application/xml');
            res.setBody(json);
            res.setStatusCode(404);
            return res;
        }
    }
    
    public class TestTalxResponseMock3 implements HttpCalloutMock{
        
        public HTTPResponse respond(HTTPRequest req) { 
            
            String json = '<?xml version="1.0" encoding="UTF-8"?><?OFX OFXHEADER="200" VERSION="201" SECURITY="NONE" OLDFILEUID="NONE" NEWFILEUID="NONE"?><OFX><SIGNONMSGSRSV1><SONRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><DTSERVER>20180503020721</DTSERVER><LANGUAGE>ENG</LANGUAGE></SONRS></SIGNONMSGSRSV1></OFX>';
            
            // Create a fake response for status code other than 200
            HttpResponse res = new HttpResponse();
            res.setHeader('Content-Type', 'application/xml');
            res.setBody(json);
            res.setStatusCode(200);
            return res;
        }
    }
    
    Testmethod static void method2WithParameteresNull(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx'; 
            insert taxInt;
            
            //Creating Account
            Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            TalxIntegration.CallTalxResponse(null,null);
            TalxIntegration.CallTalx(null,null);
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    
    Testmethod static void method3insertTalxDataWithParametersNull(){
        try{
            //Creating custom setting
            TalxInt__c taxInt = new TalxInt__c();
            
            
            taxInt.APPID__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.APPVER__c= 1;
            taxInt.DTCLIENT__c='20170612131212';
            taxInt.Endpoint__c='https://test.ofx4.talx.com/verifierinterimct2/xmlb2b_router.dll';
            taxInt.LANGUAGE__c='ENG';
            taxInt.USERID__c='PayoffIntUsrTest@50005';
            taxInt.USERPASS__c='payoffTalx123!';
            taxInt.SetupOwnerId = UserInfo.getUserId();
            taxInt.TalxCertificateName__c = 'talx';  //LOS-168
            insert taxInt;
            
            //Creating Account
           Account acc = MW_GlobalTestUtility.GetAccount('Member');
            Insert acc;
            System.assertEquals('Test',acc.Name,'Wrong Account');
            
            genesis__Org_Parameters__c cso = new genesis__Org_Parameters__c(genesis__Disable_Triggers__c = true);
            insert cso;
            
            //Creating Application
            genesis__Applications__c app= new genesis__Applications__c(
                genesis__Due_Day__c = 20,
                genesis__Expected_First_Payment_Date__c = system.Today(),
                genesis__Expected_Start_Date__c = system.Today(),
                genesis__Funding_in_Tranches__c = true,
                Borrower_s_Email__c = null,
                genesis__Account__c = acc.Id,
                Application_Start_DateV2__c = system.Today(),
                DocuSignFlag__c=true,
                genesis__Status__c = 'agent_verified',
                genesis__Draw_Period_End_Date__c = system.Today()
            );
            insert app;
            List<Id> appIdlist = new List<Id>();
            appIdlist.add(app.id);
            
            System.assertEquals(null,app.Borrower_s_Email__c,'Borrower Email is not null');
            Test.setMock(HttpCalloutMock.class, new TestTalxResponseMock());
            Test.startTest();
            TalxIntegration.CallTalxIntegration(app.id,acc.id,'TestClass');
            TalxIntegration.insertTalxData(null,null, null,null);
            Test.stopTest();
        }catch(Exception e){
            System.debug('Test class exception');
        }
    }
    //CRM-980 - end
    
}