<apex:page docType="html-5.0" sidebar="true" showHeader="true" lightningStylesheets="true" standardStylesheets="false" controller="collect.BatchJobSchedulerCtrl">
  <html>
      <head>
            <meta charset="utf-8"/>
            <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
            <meta name="mobile-web-app-capable" content="yes"/>
            <meta name="apple-mobile-web-app-capable" content="yes"/>
            <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
            <!-- Latest compiled and minified CSS -->
            <apex:stylesheet value="{!URLFOR($Resource.collect__Bootstrap, 'Bootstrap/css/bootstrap.css')}"/>
            <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"/>-->
            <!-- Optional theme -->
            <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"/>-->
            <link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"/>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
            <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
            <!--Polymer Imports-->
            <!--<apex:includeScript value="{!URLFOR($Resource.Polymer, 'Polymer/components/bower_components/webcomponentsjs/webcomponents.js')}"/><link rel="import" href="{!URLFOR($Resource.Polymer, 'Polymer/components/bower_components/webcomponentsjs/webcomponents.js')}"/><link rel="import" href="{!URLFOR($Resource.Polymer, 'Polymer/components/bower_components/paper-toast/paper-toast.html')}"/><link rel="import" href="{!URLFOR($Resource.Polymer, 'Polymer/components/bower_components/paper-button/paper-button.html')}"/>-->
            <!--Import Salesforce Scripts.-->
            <script src="../../soap/ajax/29.0/connection.js" type="text/javascript"></script>
            <script src="../../soap/ajax/29.0/apex.js" type="text/javascript"></script>
            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
          <script>
            //Define angular module.
            var myApp = angular.module('myApp',[]);

             // Controller for Third Party
            myApp.controller('JobCtrl', ['$scope', function($scope){

                // Runs Create Collection Activity Job for all Contracts.
                $scope.runCreateCollectionActivityJob = function() {

                  console.log('-----Inside runCreateCollectionActivityJob-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runCreateCollectionActivityJob}',
                      handleCreateCollectionActivityJobResponse
                  );
                }

                function handleCreateCollectionActivityJobResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Create Collection Activity Job Ends.

                // Runs Process Collection Activity Job for all Contracts.
                $scope.runProcessCollectionActivityJob = function() {

                  console.log('-----Inside runProcessCollectionActivityJob-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runProcessCollectionActivityJob}',
                      handleProcessCollectionActivityJobResponse
                  );
                }

                function handleProcessCollectionActivityJobResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Process Collection Activity Job Ends

                // Run Promise To Pay Status Check Job for all Contracts
              $scope.runPromiseToPayStatusCheckJob = function() {

                  console.log('-----Inside runPromiseToPayJob-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runPromiseToPayStatusCheckJob}',
                      handlePromiseToPayStatusCheckJobResponse
                  );
                }

                function handlePromiseToPayStatusCheckJobResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Promise To Pay Status Check Job Ends
                
                // Run Promise To Pay Status Reversal Job all Contracts
                $scope.runPromiseToPayStatusReversalJob = function() {

                  console.log('-----Inside runPromiseToPayStatusReversalJob-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runPromiseToPayStatusReversalJob}',
                      handlePromiseToPayStatusReversalJobResponse
                  );
                }

                function handlePromiseToPayStatusReversalJobResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Promise To Pay Status Reversal Job Ends

               // Run All Jobs For all Contracts
                $scope.runAllBatchJobs = function() {

                  console.log('-----Inside runAllBatchJobs-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runAllBatchJobs}',
                      handlerAllBatchJobsResponse
                  );
                }

                function handlerAllBatchJobsResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Run All Jobs Ends

                // Runs Sync Job for all Interface Objects
                $scope.runSyncDagJob = function() {

                  console.log('-----Inside runSyncDagJob-----');
                  Visualforce.remoting.Manager.invokeAction(
                      '{!$RemoteAction.BatchJobSchedulerCtrl.runSyncDagJob}',
                      handleSyncDagJobResponse
                  );
                }

                function handleSyncDagJobResponse(result, event) {
                      if(event.status) {
                          alert('Job Submitted Successfully!');
                      } else if (event.type === 'exception') {
                          alert('An Exception Occurred: ' + JSON.stringify(result));
                      } else {

                      }
                }
                // Sync Job Ends

            }]);

          </script>
          <style>
                html *
                    {
                       font-size: 102%; !important;
                       font-family: Arial !important;
                    }
            </style>
      </head>
      <body ng-app="myApp">
        <div class="bs">
        <div ng-controller="JobCtrl" >
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">CL Collections: Batch Job Scheduler</h3>
                    </div>
                    <div class="panel-body">
                        <!--Second Table Layout Starts.-->
                        <div class="col-xs-12">
                            <!--<h2 class="sub-header">Latest Incidents</h2>-->
                            <div class="table-responsive">
                                <!--Table to show Contract Details.-->
                                <table class="table table-striped">
                                    <caption>
                                        <b>Batch Jobs for Contracts</b>
                                    </caption>
                                    <thead>
                                        <tr>
                                            <th>Schedule</th>
                                            <th>Job Name</th>
                                            <th>Description</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runCreateCollectionActivityJob()">Run</button>
                                            </td>
                                            <td class="col-md-4"><b>Create Strategy Actions</b></td>
                                            <td class="col-md-4"> Creates collection strategy actions for Payment Reminders and other delinquency related communications for all contracts that qualify the collection strategy criteria. It also assigns contracts to users in the work queue. </td>
                                        </tr>
                                        <!--<tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runProcessCollectionActivityJob()">Run</button>
                                            </td>
                                            <td class="col-md-4"><b>Process Strategy Actions</b></td>
                                            <td class="col-md-4"> Processes SMSs, Emails and Dunning Letters actions. </td>
                                        </tr>-->
                                        <tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runPromiseToPayStatusCheckJob()">Run</button>
                                            </td>
                                            <td class="col-md-4"><b>Process Promise To Pay </b></td>
                                            <td class="col-md-4"> Checks if a Promise To Pay is broken or honored by the borrower. </td>

                                        </tr>
                                        <tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runPromiseToPayStatusReversalJob()">Run</button>
                                            </td>
                                            <td class="col-md-4"><b>Process Promise To Pay Status Reversal</b></td>
                                            <td class="col-md-4"> Checks if an honored Promise To Pay is broken if respective Payment Transaction is reversed. </td>
                                        </tr>
                                        <tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runAllBatchJobs()">Run All</button>
                                            </td>
                                            <td class="col-md-4"><b>All Batch Jobs for Contracts</b></td>
                                            <td class="col-md-4"> Runs all batch jobs for processing delinquent contracts in the system. The jobs will run in sequence as listed on the Batch Job Scheduler page. </td>
                                        </tr>
                                        <tr>
                                            <td class="col-md-2">
                                                <button type="submit" class="btn btn-primary btn-sm" ng-click="runSyncDagJob()">Run</button>
                                            </td>
                                            <td class="col-md-4"><b>Sync Job for Interface objects</b></td>
                                            <td class="col-md-4"> Runs Sync Jobs for the following Interface objects : Bank Account, Contract, Party, Contract Due Details, Charges, Payment Transaction, Repayment Schedule. </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <!--Second table ends here.-->
                                </div>
                            <div id="push"></div>
                        </div>
                        <!--Second Table Layout Ends.-->
                    </div>
                </div>
             </div>
        </div><!-- BS Class css ends here.-->
      </body>
  </html>
</apex:page>