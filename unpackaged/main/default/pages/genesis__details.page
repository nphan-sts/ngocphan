<apex:page lightningStylesheets="{!$User.UIThemeDisplayed == 'Theme4d'}" standardController="genesis__Applications__c" extensions="genesis.AppDetailsCtrl" action="{!onLoad}" showHeader="true" tabStyle="genesis__Applications__c" title="Loan Application Details" standardStylesheets="true">
 <apex:outputPanel rendered="{!NOT(manager.isSF1Request)}">   
    <apex:stylesheet value="/sCSS/Theme3/default/versioning.css" />
    <apex:stylesheet value="/sCSS/Theme3/default/extended.css" />
    <apex:stylesheet value="{!$Resource.genesis__MFIStyles}" />
    
    <style>
        div#mfiflexFragmentWrapper{display:none;height:auto;width:100%;background:white;overflow:auto}
    </style>
    
    <apex:composition template="genesis__wizardComposition" >
        <!-- Define the page body, including form and button bar -->
        <apex:define name="pageBody" >
            <!-- Snehal: The following panelGrid is a hack. It should be copied in all VF pages that use wizard.
            This ugliness is due to the way VF handles polymorphism. If I leave this code in the wizardComposition,
            the Next and Back button logic cannot be customized.
             -->
            <!-- The first column -->
            <apex:panelGrid columnClasses="col1,col2" columns="2" width="100%"  cellpadding="10" cellspacing="10" border="2" rules="all">
                
                <!-- left arrow button -->
                <apex:outputPanel layout="block" styleClass="outPanelLeft" >
                    <div class="button bordered back">
                        <span class="pointer"></span>
                        <div class="content">
                            <span class="label">
                                <apex:commandLink action="{!backActionLogic}" value="{!manager.backButtonText}" />
                            </span>
                        </div>
                    </div>
                </apex:outputPanel>
        
                <!-- right arrow button -->
                <apex:outputPanel layout="block">
                    
                    <div class="button bordered next">
                        <span class="pointer"></span>
                        <div class="content">
                            <span class="label">
                                <apex:commandLink action="{!nextActionLogic}" value="{!manager.nextButtonText}"/>
                            </span>
                        </div>
                    </div>
                    
                </apex:outputPanel>
            
            </apex:panelGrid>
        
            <apex:detail subject="{!genesis__Applications__c}" relatedList="false" title="true" inlineEdit="true" id="loanDetailIframe"  />
                
        </apex:define>
        
    </apex:composition>
</apex:outputPanel>

<apex:outputPanel rendered="{!manager.isSF1Request}">
<apex:include pageName="genesis__mwizardComposition"/>
    <apex:form >
        <apex:detail subject="{!genesis__Applications__c}" relatedList="false" title="true" inlineEdit="true" id="loanDetailIframe"  />
    </apex:form>
</apex:outputPanel>
</apex:page>