<apex:page lightningStylesheets="{!$User.UIThemeDisplayed == 'Theme4d'}" standardController="genesis__Applications__c" extensions="genesis.SelectActionCtrl" id="selectAnActionPgId" showHeader="true">
    
    <apex:composition template="genesis__wizardComposition" >
        
        <apex:define name="pageBody">
            <!-- Snehal: The following panelGrid is a hack. It should be copied in all VF pages that use wizard.
            This ugliness is due to the way VF handles polymorphism. If I leave this code in the wizardComposition,
            the Next and Back button logic cannot be customized.
             -->
            <!-- The first column -->
            <apex:panelGrid columnClasses="col1,col2" columns="2" width="100%"  cellpadding="10" cellspacing="10" border="2" rules="all">
                
                <!-- left arrow button -->
                <apex:outputPanel layout="block" styleClass="outPanelLeft" >
                    <div class="button bordered back">
                        <span class="pointer"></span>
                        <div class="content">
                            <span class="label">
                                <apex:commandLink action="{!backActionLogic}" value="{!manager.backButtonText}" />
                            </span>
                        </div>
                    </div>
                </apex:outputPanel>
        
                <!-- right arrow button -->
                <apex:outputPanel layout="block">    
                    <div class="button bordered next">
                        <span class="pointer"></span>
                        <div class="content">
                            <span class="label">
                                <apex:commandLink action="{!nextActionLogic}" value="{!manager.nextButtonText}"/>
                            </span>
                        </div>
                    </div>     
                </apex:outputPanel>
            </apex:panelGrid>     
        </apex:define>
        
        <!-- Define the page body, including form and button bar -->
        <apex:define name="pageNoForm" >
            <apex:pageBlock title="Start">
                <apex:pagemessages />
                <!-- Action Form -->
                <apex:outputpanel id="actionFormId">
                    <apex:pageBlockSection columns="1" id="actionBS" title="Select a Product" showHeader="true" collapsible="false">               
                        <apex:form >
                            <apex:pageBlockSectionItem helpText="Select a Product">   
                                <apex:inputField value="{!action.genesis__Product_Type__c}" required="true" />                            
                            </apex:pageBlockSectionItem>
                            <apex:outputLabel >Create New Application</apex:outputLabel>
                            <apex:inputCheckbox value="{!action.genesis__New_Application__c}">     
                                <apex:actionSupport action="{!createNewApplication}" event="onchange" 
                                        reRender="actionFormId"/>
                            </apex:inputCheckbox>
                            
                            <apex:outputLabel >Retrieve existing Application</apex:outputLabel>
                            <apex:inputCheckbox value="{!action.genesis__Existing_Application__c}">
                                <apex:actionSupport action="{!openExistingApplication}" event="onchange" 
                                        reRender="actionFormId" />
                            </apex:inputCheckbox>
                        </apex:form>
                        
                        <apex:pageBlockSectionItem helpText="Create Lease Application" rendered="{!startANewApplication}" > 
                            <apex:include pageName="{!IF(action.Product_Type__c = 'Lease','tabbedApplication',IF(action.Product_Type__c = 'Loan','newLoanApplication',IF(action.Product_Type__c = 'Line of Credit','newLOCApplication','newLOCApplication')))}" id="newAppId" />        
                        </apex:pageBlockSectionItem>
                        
                        <apex:pageBlockSectionItem helpText="Select an Application" rendered="{!showApplicationLU}" >   
                            <apex:form >
                                <apex:inputField value="{!action.genesis__Application__c}"/>
                                <apex:commandButton action="{!retrieveApplication}" value="Retrieve Application"/>
                            </apex:form>
                        </apex:pageBlockSectionItem>
                        
                    </apex:pageBlockSection>
                        
                </apex:outputpanel>
                <!-- Buttons -->
                
            </apex:pageBlock>
        </apex:define>
                    
    </apex:composition>
    
</apex:page>